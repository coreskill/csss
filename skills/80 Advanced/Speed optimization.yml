---
sort: 80

---
skill: "Why"
level: 4
resources:
  - url: https://developers.google.com/web/fundamentals/performance/why-performance-matters
    desc: "Why does speed matter? [web.dev]" 
    lang: en
  - url: https://developer.mozilla.org/en-US/docs/Learn/Performance/why_web_performance
    desc: "The “why” of web performance [MDN]"
    lang: en

---
skill: "Percieved vs. real speed"
level: 4
requires:
  - "Why"
resources:
  - url: https://developers.google.com/web/fundamentals/performance/rail
    desc: "Measure performance with the RAIL model [web.dev]"
    lang: en
  - url: https://developer.mozilla.org/en-US/docs/Learn/Performance/Perceived_performance
    desc: "Perceived performance [MDN]"
    lang: en

---
skill: "Internet connection speeds"
level: 4
requires:
  - "Why"
resources:
  - url: https://developers.google.com/web/fundamentals/performance/poor-connectivity
    desc: "Understanding Low Bandwidth and High Latency [web.dev]"
    lang: en
  - url: https://developer.mozilla.org/en-US/docs/Learn/Performance/Understanding_latency
    desc: "Understanding latency [MDN]"
    lang: en

---
skill: "HTTP file transfer"
level: 4
requires:
  - "Internet connection speeds"
resources:
  - url: https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching
    desc: "Prevent unnecessary network requests with the HTTP Cache [web.dev]"
    lang: en
  - url: https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer
    desc: "Optimizing Encoding and Transfer Size of Text-Based Assets [web.dev]"
    lang: en
  - url: https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work
    desc: "Populating the page: how browsers work [MDN]"
    lang: en

---
skill: "Strategies"
level: 4
requires:
  - "Percieved vs. real speed"
  - "Internet connection speeds"
  - "HTTP file transfer"
text: |
  While it’s possible to work on speed after design and development it’s much better to think about this stuff from early phases of both.
  
  ## There are (usually) no easy wins
  
  Most of the time there is not one thing you can do to make your site faster by a big difference. Many times you have to make several changes and each shaves off some non significant time and together they make a real difference. 
  
  ## Don’t overoptimize
  
  Optimizing for speed can take a lot of time and while speed is important try to focus on low-hanging fruit: changes that make the most difference and are cheapest (quickest) to implement.
  
  It also makes sense to focus on optimizing pages critical to the bottom line, e.g. landing pages, registration pages or shopping carts. 
  
  While it's great to **think** about optimization early, it’s also important not to optimize too early.
  
  ## Not loaded is the fastest
  
  You can spend a lot of effort to speed up loading of all the assets for complex web page but most effective way is just to not load them at all. 
  
  So the first rule is to evaluate every single piece of code if it really adds enough value to justify slowing down the page.
   
  You can also try to load only assets really needed for the page. For example you might have a lightbox script that is needed only on gallery page so link it only there and not on homepage.
  
  ## Can you load it later?
  
  Technique named _lazy loading_ means that you load assets later, after whole page is loaded. You can have pictures loaded later if user really scrolls down.
  
  This has the advantage not only in speed but also for users on metered connections where every megabyte costs real money.
  
  ## Let’s make everything smaller
  
  If you really need to load something let’s make sure it’s as small as possible.

---
skill: "Optimizing CSS"
level: 4
requires:
  - "Strategies"
resources:
  - url: https://github.com/css/csso
    desc: "CSSO"
    lang: en
    type: tool 
  - url: https://cssnano.co/
    desc: "cssnano"
    lang: en
    type: tool
  - url: https://purgecss.com/
    desc: "PurgeCSS"
    lang: en
    type: tool
  - url: https://github.com/jakubpawlowicz/clean-css
    desc: "clean-css"
    lang: en
    type: tool
      
---
skill: "Optimizing JavaScript"
level: 5
requires:
  - "Strategies"
resources:
  - url: https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking
    desc: "Reduce JavaScript Payloads with Tree Shaking [web.dev]"
    lang: en
  - url: https://developers.google.com/web/fundamentals/performance/optimizing-javascript/code-splitting
    desc: "Reduce JavaScript payloads with code splitting [web.dev]"
    lang: en

---
skill: "Optimizing SVG"
level: 4
text: |
  More at [Optimizing SVGs](/optimizing-svgs.html).
requires:
  - "Strategies"
  - "// SVG // SVG Tools // Optimizing SVGs"

---
skill: "Optimizing images"
level: 4
text: |
  
requires:
  - "Strategies"
  - "// Design related // Bitmaps // PNG size optimization"
  - "// Design related // Bitmaps // JPG size optimization"
  - "// Design related // Bitmaps // GIF size optimization"
resources:
  - url: https://developer.mozilla.org/en-US/docs/Learn/Performance/Multimedia
    desc: "Performance: Multimedia: Images [MDN]"
    lang: en
  - url: https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/image-optimization
    desc: "Optimize your images [web.dev]"
    lang: en

---
skill: "Blocking and non-blocking assets"
level: 4
requires:
  - "Strategies"
resources:
  - url: https://developers.google.com/web/fundamentals/performance/critical-rendering-path/analyzing-crp/
    desc: "Analyzing Critical Rendering Path Performance [web.dev]"
    lang: en
  - url: https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/javascript-startup-optimization
    desc: "JavaScript Start-up Optimization [web.dev]"
    lang: en

---
skill: "Lazy loading"
level: 5
requires:
  - "Percieved vs. real speed"
  - "Strategies"
  - "Blocking and non-blocking assets"
resources:
  - url: https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video
    desc: "Lazy-load images and video  [web.dev]"
    lang: en

---
skill: "Measuring speed"
level: 5
requires:
  - "Percieved vs. real speed"
  - "Strategies"
  - "Blocking and non-blocking assets"
resources:
  - url: https://developer.mozilla.org/en-US/docs/Learn/Performance/Measuring_performance
    desc: "Measuring performance [MDN]"
    lang: en
  - url: https://developers.google.com/web/tools/chrome-devtools/evaluate-performance
    desc: "Tools built in Chrome Dev tools"
    lang: en
  - url: https://www.webpagetest.org/
    desc: "WebPageTest"
    type: tool
    lang: en
  - url: https://gtmetrix.com/
    desc: "GTmetrix"
    type: tool
    lang: en
